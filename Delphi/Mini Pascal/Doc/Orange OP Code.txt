OP 코드라고 하지만, 쉽게 읽을 수 있는 가벼운 인터프린터형 언어라고 보면 된다.
초기 컴파일러를 테스트하기 위해서 만들었으며,
컴파일러가 완성되면 플래시 등으로 플랫폼을 옮겨갈 예정이다.
모든 코드는 대소문자 구별이 없다.

* 변수 선언
  - String (변수이름)
  - Number (변수이름)
    . Boolean은 Number를 이용하며, X>=1 일때 true의 의미를 가진다.
  - 사용자 변수는 언더바(_)로 시작해야 한다.

* 시스템 변수
  - ResultString, ResultNumber
    . 연산 이후 결과를 저장
  - ReturnString, ReturnNumber
    . 함수 호출 이후 결과를 저장
  - Count
    . 반복문에서 사용

* 연산
  - 이항연산 
    . Plus (변수/데이터) (변수/데이터)
    . Minus (변수/데이터) (변수/데이터)
    . Mul (변수/데이터) (변수/데이터)
    . Div (변수/데이터) (변수/데이터)
    . Mod (변수/데이터) (변수/데이터)
    . Compare (A-변수/데이터) (B-변수/데이터)
      . ResultNumber = 0 : 같다, -1 : A가 작다, 1 : A가 크다
    . Equal (A-변수/데이터) (B-변수/데이터)
      . ResultNumber = 1 : 같다, -1 : 다르다
    . Big (A-변수/데이터) (B-변수/데이터)
    . Small (A-변수/데이터) (B-변수/데이터)
    . And, Or, XOr, Shl, Shr
  - 단항연산
    . Not (변수/데이터)
      . 비트 연산 아님
      . 1 --> 0
      . 1  --> 1
    . Inc (변수)
    . Dec (변수)
  - 문자열 연산
    . Cat (변수/데이터)

* 조건문
  - If (변수) (OP Code)
  - IfNot (변수) (OP Code)

* 함수 호출
  - Call (함수이름) [인수1, 인수2 ...]
    . 호출결과는 ReturnValue(ReturnString, ReturnNumber)에 저장된다.

* 스택
  - Push (변수/데이터)
  - POP (변수)

* 기타
  - // : 주석
  - Const (상수이름) (데이터)
  - @라벨이름
  - Jump @라벨이름
  - Move (변수/Data) to (변수)
