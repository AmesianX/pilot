1. 권위의 법칙

2. BATK 일화
   - 빙산의 일각을 전체와 착각하는 현상 (인간이기 때문에 당연하다)

3. "분석 = 설계" 3요소
   - 기능 분석 -> 기능목록 -> 범위, 일정 예측 자료 -> Use Case, PBS
     . 핵심에 집중하라.  (위에서 핵심은 "기능목록", "범위, 일정 예측 자료")
   - 구조 분석 -> 시스템의 구조적 설명 -> 효율 -> ERD, Class Diagram, Screen Layout -
     . 건축물과 자동차 등의 비교
     . 왜 기능과 구조 분석 이후 건축은 잘 진행되지만, 소트프웨어는?
   - 동적분석 -> 동작 방식에 대한 설명 -> 검증 -> Job Flow (OMG.BPMN), Navigation Diagram (간략 설명)

4. 전략계획
   - 한 번에 뛰어넘으려는 위험
   - 기대효과 <- 최종목표 <- (실현계획: 1단계, 2단계, 3단계 ...)
   - 바둑의 프로기사는 20수 앞까지 내다 본다고 한다.  당신의 비지니스는 몇 수 앞으로 보고 있는 가?
     . 멧돼지와 덧
     . 빈틈 발견 후 앞 뒤 안가리고 공격하는 것은 자살 행위


* 똑똑한 오너는 폭군이 된다.  (위험한 표현을 완하)
  - 비전 공유의 어려움
  - 예: 물 좀 떠다 주시겠어요? 시나리오
    . 물 떠 주는 것이 얼마나 어려운 작업인가?
    . 뜨거운 물? 차거운 물?
    . 수돗물? 정수기 물? 혹시 화장실 변기물?
    . 컵?  물병?
  - 망하는 회사의 두 종류
    . 오너가 무슨 생각을 하는 지 직원들이 도통 모른다.
    . 직원들이 무엇을 하는 지 오너가 도통 모른다.
    . 두 요인 모두 가지면?  잭팟!!

* 핵심을 아는 개발자/개발사가 부족하다.  (국내에는 희귀할 정도다)
  - 열매 (각종 기술, 방법론 등의 지식)
  - 줄기 (경력)
  - 뿌리 (핵심을 이해하는 능력)
  - 이것이 프로젝트 성공률의 근본 이유다.

